
package EditorDeTexto;

import java.awt.FileDialog;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Karen TP
 */
public class EditorTextoVentana extends javax.swing.JFrame {
    
    private Texto texto= new Texto();
    private TextoCaretaker caretaker= new TextoCaretaker();
    private boolean saveInDisk=false;
    private int textID;
    private String fn;
    private String dir;
    private String filename;
    private String holdText;
    private String programName="Editor de Texto";
    private boolean textChanged=true;
    
    public EditorTextoVentana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editorTextoPanel = new javax.swing.JPanel();
        BackButton = new javax.swing.JButton();
        SaveButton = new javax.swing.JButton();
        openDocumentButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 204));
        setName("Editor de Texto"); // NOI18N

        editorTextoPanel.setBackground(new java.awt.Color(183, 177, 188));

        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EditorDeTexto/back3.png"))); // NOI18N
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        SaveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EditorDeTexto/save.png"))); // NOI18N
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        openDocumentButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EditorDeTexto/add-file.png"))); // NOI18N
        openDocumentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openDocumentButtonActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        javax.swing.GroupLayout editorTextoPanelLayout = new javax.swing.GroupLayout(editorTextoPanel);
        editorTextoPanel.setLayout(editorTextoPanelLayout);
        editorTextoPanelLayout.setHorizontalGroup(
            editorTextoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editorTextoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editorTextoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editorTextoPanelLayout.createSequentialGroup()
                        .addComponent(openDocumentButton)
                        .addGap(18, 18, 18)
                        .addComponent(SaveButton)
                        .addGap(18, 18, 18)
                        .addComponent(BackButton)
                        .addGap(0, 231, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        editorTextoPanelLayout.setVerticalGroup(
            editorTextoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editorTextoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editorTextoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(openDocumentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editorTextoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editorTextoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void checkFile() {
        BufferedReader read;
        StringBuffer sb = new StringBuffer();
        try {
            read = new BufferedReader(new FileReader(filename));
            String line;
            while ((line = read.readLine()) != null) {
                sb.append(line + "\n");
            }
            textArea.setText(sb.toString());
            read.close();
        } catch (FileNotFoundException e) {
            System.out.println("Archivo no encontrado");
        } catch (IOException ioe) {}
    }
    private void openDocumentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openDocumentButtonActionPerformed
        if(textArea.getText().length() < 1) {
            FileDialog fd = new FileDialog(this, "Escoge el archivo", FileDialog.LOAD);
            fd.show();
            if (fd.getFile() != null) {
                filename = fd.getDirectory() + fd.getFile();
                setTitle(filename);
                checkFile();
            }
        textArea.requestFocus();
        }
        else{
            System.out.println("voy a abrir archivo y me pregunta");
            int confirm = JOptionPane.showConfirmDialog(
                    null, "Â¿Desea guardar antes de salir?",
                    "Editor de texto",JOptionPane.YES_NO_CANCEL_OPTION);
            if (confirm==JOptionPane.YES_OPTION)
            {
                System.out.println("Quiero guardar");
                if("".equals(filename) || !saveInDisk){
                    saveAs();
                }
                else{
                    save(filename);
                }
            FileDialog fd = new FileDialog(this, "Escoge el archivo", FileDialog.LOAD);
            fd.show();
            if (fd.getFile() != null) {
                filename = fd.getDirectory() + fd.getFile();
                setTitle(filename);
                checkFile();
            }
            textArea.requestFocus();

            }
            else if(confirm == JOptionPane.NO_OPTION){
                FileDialog fd = new FileDialog(this, "Escoge el archivo", FileDialog.LOAD);
                fd.show();
                if (fd.getFile() != null) {
                    filename = fd.getDirectory() + fd.getFile();
                    setTitle(filename);
                    checkFile();
                }
                textArea.requestFocus();
            }

        }   
        
    }//GEN-LAST:event_openDocumentButtonActionPerformed
    private void save(String filename){
        System.out.println("holi");
        setTitle(programName+" "+filename);
        try
        {
            FileWriter out;
            out = new FileWriter(filename);
            out.write(textArea.getText());
            out.close();
        }
        catch(Exception exp)
        {
            System.out.println("Error: " + exp);
        }
        textChanged=false;
        String textoGuardado= textArea.getText();
        texto.setNumIdentificador(textID);
        texto.setTextoGuardado(textoGuardado);
        caretaker.addNewMemento(texto.createMemento());
                          
        JOptionPane.showMessageDialog(this, "Texto guardado");  
        
    }
    private void saveAs(){
        FileDialog fd = new FileDialog(EditorTextoVentana.this, "Guardar ", FileDialog.SAVE);
            fd.show();
            if (fd.getFile() != null) {

                fn=fd.getFile();
                dir=fd.getDirectory();
                filename = dir + fn ;

                setTitle(filename);
            }
            
            try
            {
                DataOutputStream d = new DataOutputStream(new FileOutputStream(filename));
                holdText = textArea.getText();
                BufferedReader br = new BufferedReader(new StringReader(holdText));
                while ((holdText = br.readLine()) != null)
                {
                    d.writeBytes(holdText + "\r\n");
                    d.close();
                }
            }
            catch (Exception e)
            {
                System.out.println("Archivo no encontrado");
            }
            
            textArea.requestFocus();
            save(filename);
    }
    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        if(!saveInDisk){
            saveInDisk=true;
            saveAs();
        }
        else{
            save(filename);
        }
              // TODO add your handling code here:
    }//GEN-LAST:event_SaveButtonActionPerformed

    public void updateText(){   
        System.out.println("Texto guardado:" + texto.getTextoGuardado());
        textArea.setText(texto.getTextoGuardado());
          
    }
    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        
        TextoMemento textoMemento=caretaker.getPreviousMemento();
        if(textoMemento==null){
            JOptionPane.showMessageDialog(this, "No existen estados anteriores");
            return;
        }
        texto.restoreMemento(textoMemento);
        updateText();
        
    }//GEN-LAST:event_BackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorTextoVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorTextoVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorTextoVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorTextoVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorTextoVentana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton SaveButton;
    private javax.swing.JPanel editorTextoPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton openDocumentButton;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
